<maison-curtain></maison-curtain>

<maison-country-picker>
  <div class="close-popup">
    <svg aria-label="Dismiss" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" style="height: 1em; width: 1em;"><path d="M11.414 10l6.293-6.293a.999.999 0 1 0-1.414-1.414L10 8.586 3.707 2.293a.999.999 0 1 0-1.414 1.414L8.586 10l-6.293 6.293a.999.999 0 1 0 1.414 1.414L10 11.414l6.293 6.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z" fill="#121212"></path></svg>
  </div>
  <div class="country-picker footer-localization-selectors">
    <localization-form>
      {% form 'localization', id: 'CountrySelector', class: 'localization-form' %}
        <div class="js">
          <div class="disclosure">
            <div class="maison-country-picker--flag">
              <img style="width: 75px" src="https://cdn.shopify.com/static/images/flags/{{ localization.country.iso_code | downcase }}.svg"
                   alt="{{ localization.country.name }} flag"
                   width="75"
                   height="48"
              />
            </div>
            <h5>{{ 'Choose your shipping location' }}</h5>
            <span>{{ 'Personalise your shopping experience based on your delivery country' }}</span>
            <button type="button" class="disclosure__button alt-focus" aria-expanded="false" aria-controls="CountryListPicker">
              <img style="width: 26px" src="https://cdn.shopify.com/static/images/flags/{{ localization.country.iso_code | downcase }}.svg"
                   width="26"
                   height="26"
              />
              {{ localization.country.name }}
            </button>

            <ul id="CountryListPicker" role="list" class="disclosure__list localization__list" hidden>
              {% for country in localization.available_countries %}
                <li class="disclosure__item" tabindex="-1" {% if country.iso_code == localization.country.iso_code %}selected{% endif %}>
                  <a href="#"{% if country.iso_code == localization.country.iso_code %} aria-current="true"{% endif %} data-value="{{ country.iso_code }}">
                    <img style="width: 26px" src="https://cdn.shopify.com/static/images/flags/{{ country.iso_code | downcase }}.svg"
                         width="26"
                         height="26"
                         alt="{{ country.name }} flag"
                    />
                    {{ country.name }}
                  </a>

                </li>
              {% endfor %}
            </ul>

            <input type="hidden" name="country_code" value="{{ localization.country.iso_code }}">
          </div>
        </div>
      {% endform %}
    </localization-form>
  </div>
</maison-country-picker>

<script>
    const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
            if (mutation.addedNodes.length) {
                const popup = document.querySelector('maison-country-picker')
                const countrySelector = document.getElementById('maison-country-selector')

                if (popup) {
                    observer.disconnect()

                    const closePopup = popup.querySelector('.close-popup')
                    const curtain = document.querySelector('maison-curtain')
                    const mainBody = document.querySelector('.slideout-panel')

                    if (closePopup) {
                        closePopup.addEventListener('click', (event) => {
                            popup.classList.remove('visible')
                            curtain.classList.remove('visible')
                            document.body.classList.remove('country-popup-active');
                        })

                        curtain.addEventListener('click', (event) => {
                            popup.classList.remove('visible')
                            curtain.classList.remove('visible')
                            document.body.classList.remove('country-popup-active');
                        })
                    }
                }
            }
        });
    });

    observer.observe(document.body, {
        childList: true,
        subtree: true,
    });

    const observerSelector = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
            if (mutation.addedNodes.length) {
                const popup = document.querySelector('maison-country-picker')
                const curtain = document.querySelector('maison-curtain')
                const countrySelector = document.getElementById('maison-country-selector')
                const mainBody = document.querySelector('.slideout-panel')

                if (countrySelector) {
                    observerSelector.disconnect()

                    countrySelector.addEventListener('click', (event) => {
                        curtain.classList.add('visible')
                        popup.classList.add('visible')
                        document.body.classList.add('country-popup-active');
                    })
                }
            }
        });
    });

    observerSelector.observe(document.body, {
        childList: true,
        subtree: true,
    });
</script>